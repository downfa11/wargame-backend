version: '3'
services:

  kafka:
    image: bitnami/kafka:3.7.0
    restart: always
    container_name: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # KRaft settings
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # Listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - wargame_network
    volumes:
      - "kafka:/bitnami/kafka"

  kafka-ui:
    image: provectuslabs/kafka-ui
    restart: always
    container_name: kafka-ui
    ports:
      - '8989:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=kraft-standAlone
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true
      #- KAFKA_CLUSTERS_0_METRICS_PORT=9999
    networks:
      - wargame_network

  mysql:
    image: mysql:8.0
    networks:
      - wargame_network
    volumes:
      - ./db/conf.d:/etc/mysql/conf.d
      - ./db/data:/var/lib/mysql
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Seoul
      - MYSQL_HOST=localhost
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=wargame
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw

  redis:
    image: redis:6.2
    networks:
      - wargame_network
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=1116

  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: elasticsearch
    networks:
      - wargame_network
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false # false for dev
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic:/usr/share/elasticsearch/data
    ports:
      - "9300:9300"
      - "9200:9200"

  wargame:
    image: wargame:1.0.0
    networks:
      - wargame_network
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
      - kafka
      - elasticsearch
    environment:
      - SPRING_R2DBC_URL=r2dbc:mysql://mysql:3306/wargame?serverTimezone=Asia/Seoul
      - SPRING_R2DBC_USERNAME=mysqluser
      - SPRING_R2DBC_PASSWORD=mysqlpw
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=auto
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:9092
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=1116
      - SPRING_REDIS_REACTIVE_ENABLED=true
      - WAITING_VALUE_MAXALLOW=3
      - SCHEDULER_ENABLED=true
      - SPRING_VAR_MATCHEXPIRETIME=3600
      - spring.data.elasticsearch.client.reactive.endpoints="localhost:9200"
      - SPRING_ELASTICSEARCH_REST_URIS=http://elasticsearch:9200
      - SPRING_CLOUD_VAULT_TOKEN=hvs.CAESIIdGdIiSPTI30cbKBKU6mQVAKJbYFuLw0Z-HSm0cPsAAGh4KHGh2cy5XeFF5c2lOVGdaRmI3Y2pKaEFTdHZnbVI
      - SPRING_CLOUD_VAULT_SCHEME=http
      - SPRING_CLOUD_VAULT_HOST=ec2-3-35-50-74.ap-northeast-2.compute.amazonaws.com
      - SPRING_CLOUD_VAULT_PORT=8200


#  prometheus:
#    image: prom/prometheus
#    networks:
#      - wargame_network
#    volumes:
#      - ./prometheus/volume:/prometheus
#      - ./prometheus/config:/etc/prometheus
#    ports:
#      - 9090:9090
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    restart: always

#  grafana:
#    image: grafana/grafana
#    networks:
#      - wargame_network
#    volumes:
#      - ./grafana/volume:/var/lib/grafana
#    ports:
#      - 3090:3090
#    restart: always
#    user: root

networks:
  wargame_network:
    driver: bridge

volumes:
  elastic:
    driver: local
  kafka:
    driver: local
