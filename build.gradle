plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.palantir.docker' version '0.35.0'
}

group = 'com.ns.wargame'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'io.projectreactor:reactor-test'

	//mysql r2dbc
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'io.asyncer:r2dbc-mysql:1.0.2'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

	//Vault
	implementation group: 'org.springframework.vault',name: 'spring-vault-core',version:'3.0.2'

	//Prometheus
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	//kafka
	implementation 'io.projectreactor.kafka:reactor-kafka:1.3.19'
	implementation 'org.springframework.kafka:spring-kafka:3.0.9'

	//json
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	//Swagger
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

docker {
	println(tasks.bootJar.outputs.files)
	name project.name+":"+version
	dockerfile file('./Dockerfile')
	files tasks.bootJar.outputs.files
	buildArgs(['JAR_FILE':tasks.bootJar.outputs.files.singleFile.name])
}