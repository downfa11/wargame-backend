plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.35.0'
}
ext{
    axonVersion = "4.8.0"
}

group = 'com.ns.result'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(path: ':common')

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'io.projectreactor:reactor-test'

    //kafka
    implementation 'io.projectreactor.kafka:reactor-kafka:1.3.19'
    implementation 'org.springframework.kafka:spring-kafka:3.0.9'

    //Swagger
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0'

    //elasticSearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // opensearch
    implementation 'org.opensearch.client:opensearch-java:2.11.1'

    // httpclient5
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "${project.name}.jar"
}

docker {
    println(tasks.bootJar.outputs.files)
    name project.name
    dockerfile file('../Dockerfile')
    files tasks.bootJar.outputs.files
    buildArgs(['JAR_FILE':tasks.bootJar.outputs.files.singleFile.name])
}

tasks.register("prepareKotlinBuildScriptModel"){}